// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plugins.DataStore.SQL;

namespace Plugins.DataStore.SQL.Migrations
{
    [DbContext(typeof(Graf))]
    [Migration("20220305104938_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CoreBusiness.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Action",
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Adventure",
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Comedy",
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Drama",
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Crime",
                            Name = "Crime"
                        });
                });

            modelBuilder.Entity("CoreBusiness.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieImdb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseYear")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DirectorName = "John Samuel",
                            MovieImdb = "3.2",
                            MovieName = "Evil Camp",
                            ReleaseYear = "2000"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            DirectorName = "John Simul",
                            MovieImdb = "7.2",
                            MovieName = "İmage Camp",
                            ReleaseYear = "1980"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            DirectorName = "John Luel",
                            MovieImdb = "2.2",
                            MovieName = "Devil Camp",
                            ReleaseYear = "2003"
                        });
                });

            modelBuilder.Entity("CoreBusiness.Movie", b =>
                {
                    b.HasOne("CoreBusiness.Category", "Category")
                        .WithMany("Movies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CoreBusiness.Category", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
